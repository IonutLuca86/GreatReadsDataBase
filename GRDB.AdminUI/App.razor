
@inject CustomAuthenticationStateProvider authService
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <AuthorizeView Policy="RequireAuthenticatedUser">
        <RedirectToLogin />
    </AuthorizeView>

    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Inject] protected NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
       
            var isAuthenticated = await authService.IsAuthenticatedAsync();
            if (!isAuthenticated && !NavigationManager.Uri.Contains("/Login"))
            {
                NavigationManager.NavigateTo("/Login");
               
            }

     

    }
}

